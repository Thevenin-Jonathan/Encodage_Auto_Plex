from utils import horodatage, enlever_accents
from constants import criteres_audios


def selectionner_pistes_audio(info_pistes, preset):
    """
    SÃ©lectionne les pistes audio Ã  inclure en fonction des informations des pistes et du preset spÃ©cifiÃ©.

    Arguments:
    info_pistes -- Dictionnaire contenant les informations des pistes audio.
    preset -- ChaÃ®ne de caractÃ¨res reprÃ©sentant le preset utilisÃ© pour l'encodage.

    Retourne:
    Une liste des numÃ©ros de pistes des pistes audio sÃ©lectionnÃ©es, ou None si aucune piste valide n'est trouvÃ©e.
    """
    pistes_audio_selectionnees = []

    if preset in [
        "Dessins animes VF",
        "Films - Series VF",
        "4K - 10bits",
    ]:

        # SÃ©lectionner les pistes audio en franÃ§ais
        pistes_francaises = [
            piste
            for piste in info_pistes["TitleList"][0]["AudioList"]
            if piste.get("LanguageCode", "") == "fra"
        ]
        if not pistes_francaises:
            print(f"{horodatage()} ğŸš« Aucune piste audio franÃ§aise disponible.")
            return None

        # Filtrer les pistes selon les critÃ¨res
        pistes_audio_finales = [
            piste
            for piste in pistes_francaises
            if not any(
                critere in enlever_accents(piste.get("Name", ""))
                for critere in criteres_audios
            )
        ]

        if len(pistes_audio_finales) < 1:
            print(f"{horodatage()} ğŸš« Aucune piste audio disponible pour ce mÃ©dia.")
            return None

        if len(pistes_audio_finales) > 1:
            print(
                f"{horodatage()} ğŸš« Il y a plus de 2 pistes valides pour ce mÃ©dia. (Pistes : {pistes_audio_finales})"
            )
            return None

        pistes_audio_selectionnees = [pistes_audio_finales[0]["TrackNumber"]]

    elif preset in ["Films - Series MULTI", "Mangas MULTI", "Mangas VO"]:
        # SÃ©lectionner les numÃ©ros de piste audio depuis la premiÃ¨re entrÃ©e de la liste des titres
        pistes_audio_selectionnees = [
            piste["TrackNumber"] for piste in info_pistes["TitleList"][0]["AudioList"]
        ]

        if preset in ["Films - Series MULTI", "Mangas MULTI 1000kbps"]:
            # VÃ©rifier si la liste contient au moins deux entrÃ©es
            if len(pistes_audio_selectionnees) < 2:
                print(
                    f"{horodatage()} ğŸš« Minimum 2 pistes audios requises pour un mÃ©dia en MULTI."
                )
                return None

        if preset == "Mangas VO":
            if len(pistes_audio_selectionnees) > 2:
                print(
                    f"{horodatage()} ğŸš« Il y a plus de 2 pistes valides pour ce mÃ©dia en VO."
                )
                return None

        # VÃ©rifier s'il existe au moins une piste audio en franÃ§ais
        if any(
            piste.get("LanguageCode", "") == "fra"
            for piste in info_pistes["TitleList"][0]["AudioList"]
        ):
            # Trouver le numÃ©ro de la premiÃ¨re piste audio en franÃ§ais
            piste_francaise_index = next(
                piste["TrackNumber"]
                for piste in info_pistes["TitleList"][0]["AudioList"]
                if piste.get("LanguageCode", "") == "fra"
            )

            # DÃ©placer la piste audio franÃ§aise en premiÃ¨re position dans la liste
            pistes_audio_selectionnees.insert(
                0,
                pistes_audio_selectionnees.pop(
                    pistes_audio_selectionnees.index(piste_francaise_index)
                ),
            )
        else:
            if preset in ["Films - Series MULTI", "Mangas MULTI"]:
                print(
                    f"{horodatage()} ğŸš« Aucune piste audio franÃ§aise disponible pour ce mÃ©dia."
                )
                return None

    if pistes_audio_selectionnees == []:
        # Aucun sous-titre franÃ§ais trouvÃ©, retourner une erreur
        print(f"{horodatage()} ğŸš« Aucune piste audio disponible pour ce mÃ©dia.")
        return None
    return pistes_audio_selectionnees
